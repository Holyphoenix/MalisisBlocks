buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/public/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.0-SNAPSHOT'
    }
}

plugins
{
	id "com.matthewprenger.cursegradle" version "1.0.7"
}


apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = "1.8-2.0"
group = "net.malisis" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "malisisblocks"
libsDirName = "../releases"

dependencies
{
	compile 'org.projectlombok:lombok:1.14.8'
	//compile 'net.malisis:malisiscore:1.8-1.4.0:dev'	
	compile files('../MalisisCore/build/libs/malisiscore-1.8.9-2.0.0-dev.jar')
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.allJava
    classifier = 'dev'
}


artifacts {
    archives deobfJar
}

minecraft {
	version = "1.8.9-11.15.1.1722"
    mappings = "stable_20"
    
	if(file("../../run").exists()) 	{
		runDir = "../../run/assets"
	}
	else {
		runDir = "assets"
	}
	
	replace '${version}', project.version
    replaceIn "MalisisBlocks.java"
}

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def commonManifest = {
		mainAttributes(	"Built-By": "Ordinastie",
						"Created-By": System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
						"Implementation-Title": name,
						"Implementation-Version": version,
						"Implementation-Vendor": url)
}
jar.manifest commonManifest


if (project.hasProperty('curseapi')) {
	curseforge {
		apiKey = curseapi
		project {
			id = '237862'
			releaseType = 'release'
					
			addArtifact deobfJar
			
			relations {
				requiredLibrary 'malisiscore'
			}
		}
	}
}